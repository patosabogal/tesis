
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDRESS AND APPLICATION_ARGS APPROVES BOOL CURRENT_TX DIVIDE DOT DOUBLE_QUOTE EQUALS GLOBAL GREATER GREATER_OR_EQUALS LBRACKET LESSER LESSER_OR_EQUALS LOCAL LPAREN MINUS NUMBER OR PLUS QUOTE RBRACKET RPAREN SENDER STRING TIMES\n    boolean_expression : boolean_expression AND boolean_term\n    boolean_expression : boolean_expression OR boolean_term\n    boolean_expression : boolean_expression EQUALS boolean_term\n    boolean_expression : numeric_expression EQUALS numeric_term\n    boolean_expression : string_expression EQUALS string_term\n    boolean_expression : storage_expression EQUALS string_term\n    boolean_expression : storage_expression EQUALS numeric_expression\n    boolean_expression : approves_expression EQUALS boolean_term\n    boolean_expression : storage_expression LESSER numeric_expression\n    boolean_expression : storage_expression GREATER numeric_expression\n    boolean_expression : storage_expression LESSER_OR_EQUALS numeric_expression\n    boolean_expression : storage_expression GREATER_OR_EQUALS numeric_expression\n    boolean_expression : numeric_expression LESSER numeric_term\n    boolean_expression : numeric_expression LESSER_OR_EQUALS numeric_term\n    boolean_expression : numeric_expression GREATER numeric_term\n    boolean_expression : numeric_expression GREATER_OR_EQUALS numeric_term\n    numeric_expression : numeric_expression PLUS numeric_term\n    numeric_expression : numeric_expression MINUS numeric_term\n    numeric_term : numeric_term TIMES numeric_factor\n    numeric_term : numeric_term DIVIDE numeric_factor\n    numeric_factor : LPAREN numeric_expression RPAREN\n    boolean_factor : LPAREN boolean_expression RPAREN\n    \n    boolean_expression : boolean_term\n    boolean_term : boolean_factor\n    boolean_factor : BOOL\n    numeric_expression : numeric_term\n    numeric_term : numeric_factor\n    numeric_factor : NUMBER\n    string_expression : string_term\n    string_term : string_factor\n    storage_expression : storage_term\n    approves_expression : approves_term\n    approves_term : approves_factor\n    approves_factor : APPROVES\n    \n    string_factor : QUOTE STRING QUOTE\n    string_factor : DOUBLE_QUOTE STRING DOUBLE_QUOTE\n    address_factor : QUOTE ADDRESS QUOTE\n    address_factor : DOUBLE_QUOTE ADDRESS DOUBLE_QUOTE\n    \n    storage_term : GLOBAL LBRACKET numeric_factor RBRACKET\n    storage_term : GLOBAL LBRACKET string_factor RBRACKET\n    \n    storage_term : LOCAL LBRACKET address_factor RBRACKET LBRACKET RBRACKET\n    storage_term : LOCAL LBRACKET address_factor RBRACKET LBRACKET string_factor RBRACKET\n    '
    
_lr_action_items = {'GLOBAL':([0,17,49,],[14,14,14,]),'LOCAL':([0,17,49,],[15,15,15,]),'LPAREN':([0,17,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,49,53,],[17,17,49,49,49,53,53,53,53,53,53,53,53,53,53,53,53,53,53,49,53,17,53,]),'BOOL':([0,17,23,24,25,41,49,],[18,18,18,18,18,18,18,]),'NUMBER':([0,17,26,27,28,29,30,31,32,33,34,36,37,38,39,40,42,49,53,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'QUOTE':([0,17,35,36,42,43,46,49,83,85,],[20,20,20,20,20,73,77,20,86,20,]),'DOUBLE_QUOTE':([0,17,35,36,42,43,47,49,84,85,],[21,21,21,21,21,74,78,21,87,21,]),'APPROVES':([0,17,49,],[22,22,22,]),'$end':([1,2,4,11,12,13,18,19,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,],[0,-23,-26,-24,-27,-30,-25,-28,-1,-2,-3,-4,-13,-14,-15,-16,-17,-18,-19,-20,-5,-6,-7,-9,-10,-11,-12,-8,-22,-21,-35,-36,]),'AND':([1,2,4,11,12,13,18,19,44,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,],[23,-23,-26,-24,-27,-30,-25,-28,23,-1,-2,-3,-4,-13,-14,-15,-16,-17,-18,-19,-20,-5,-6,-7,-9,-10,-11,-12,-8,-22,-21,-35,-36,]),'OR':([1,2,4,11,12,13,18,19,44,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,],[24,-23,-26,-24,-27,-30,-25,-28,24,-1,-2,-3,-4,-13,-14,-15,-16,-17,-18,-19,-20,-5,-6,-7,-9,-10,-11,-12,-8,-22,-21,-35,-36,]),'EQUALS':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,19,22,44,45,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,80,81,88,90,],[25,-23,26,-26,35,-29,36,41,-31,-32,-24,-27,-30,-33,-25,-28,-34,25,26,-1,-2,-3,-4,-13,-14,-15,-16,-17,-18,-19,-20,-5,-6,-7,-9,-10,-11,-12,-8,-22,-21,-35,-36,-39,-40,-41,-42,]),'RPAREN':([2,4,11,12,13,18,19,44,45,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,],[-23,-26,-24,-27,-30,-25,-28,75,76,-1,-2,-3,-4,-13,-14,-15,-16,-17,-18,-19,-20,-5,-6,-7,-9,-10,-11,-12,-8,-22,-21,-35,-36,76,]),'LESSER':([3,4,7,9,12,19,45,58,59,60,61,76,80,81,88,90,],[27,-26,37,-31,-27,-28,27,-17,-18,-19,-20,-21,-39,-40,-41,-42,]),'LESSER_OR_EQUALS':([3,4,7,9,12,19,45,58,59,60,61,76,80,81,88,90,],[28,-26,39,-31,-27,-28,28,-17,-18,-19,-20,-21,-39,-40,-41,-42,]),'GREATER':([3,4,7,9,12,19,45,58,59,60,61,76,80,81,88,90,],[29,-26,38,-31,-27,-28,29,-17,-18,-19,-20,-21,-39,-40,-41,-42,]),'GREATER_OR_EQUALS':([3,4,7,9,12,19,45,58,59,60,61,76,80,81,88,90,],[30,-26,40,-31,-27,-28,30,-17,-18,-19,-20,-21,-39,-40,-41,-42,]),'PLUS':([3,4,12,19,45,58,59,60,61,64,65,66,67,68,76,79,],[31,-26,-27,-28,31,-17,-18,-19,-20,31,31,31,31,31,-21,31,]),'MINUS':([3,4,12,19,45,58,59,60,61,64,65,66,67,68,76,79,],[32,-26,-27,-28,32,-17,-18,-19,-20,32,32,32,32,32,-21,32,]),'TIMES':([4,12,19,52,54,55,56,57,58,59,60,61,76,],[33,-27,-28,33,33,33,33,33,33,33,-19,-20,-21,]),'DIVIDE':([4,12,19,52,54,55,56,57,58,59,60,61,76,],[34,-27,-28,34,34,34,34,34,34,34,-19,-20,-21,]),'LBRACKET':([14,15,82,],[42,43,85,]),'RBRACKET':([19,70,71,72,76,77,78,85,86,87,89,],[-28,80,81,82,-21,-35,-36,88,-37,-38,90,]),'STRING':([20,21,],[46,47,]),'ADDRESS':([73,74,],[83,84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'boolean_expression':([0,17,49,],[1,44,44,]),'boolean_term':([0,17,23,24,25,41,49,],[2,2,48,50,51,69,2,]),'numeric_expression':([0,17,36,37,38,39,40,49,53,],[3,45,64,65,66,67,68,3,79,]),'numeric_term':([0,17,26,27,28,29,30,31,32,36,37,38,39,40,49,53,],[4,4,52,54,55,56,57,58,59,4,4,4,4,4,4,4,]),'string_expression':([0,17,49,],[5,5,5,]),'string_term':([0,17,35,36,49,],[6,6,62,63,6,]),'storage_expression':([0,17,49,],[7,7,7,]),'approves_expression':([0,17,49,],[8,8,8,]),'storage_term':([0,17,49,],[9,9,9,]),'approves_term':([0,17,49,],[10,10,10,]),'boolean_factor':([0,17,23,24,25,41,49,],[11,11,11,11,11,11,11,]),'numeric_factor':([0,17,26,27,28,29,30,31,32,33,34,36,37,38,39,40,42,49,53,],[12,12,12,12,12,12,12,12,12,60,61,12,12,12,12,12,70,12,12,]),'string_factor':([0,17,35,36,42,49,85,],[13,13,13,13,71,13,89,]),'approves_factor':([0,17,49,],[16,16,16,]),'address_factor':([43,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> boolean_expression","S'",1,None,None,None),
  ('boolean_expression -> boolean_expression AND boolean_term','boolean_expression',3,'p_triple_tokens','parser.py',11),
  ('boolean_expression -> boolean_expression OR boolean_term','boolean_expression',3,'p_triple_tokens','parser.py',12),
  ('boolean_expression -> boolean_expression EQUALS boolean_term','boolean_expression',3,'p_triple_tokens','parser.py',13),
  ('boolean_expression -> numeric_expression EQUALS numeric_term','boolean_expression',3,'p_triple_tokens','parser.py',14),
  ('boolean_expression -> string_expression EQUALS string_term','boolean_expression',3,'p_triple_tokens','parser.py',15),
  ('boolean_expression -> storage_expression EQUALS string_term','boolean_expression',3,'p_triple_tokens','parser.py',16),
  ('boolean_expression -> storage_expression EQUALS numeric_expression','boolean_expression',3,'p_triple_tokens','parser.py',17),
  ('boolean_expression -> approves_expression EQUALS boolean_term','boolean_expression',3,'p_triple_tokens','parser.py',18),
  ('boolean_expression -> storage_expression LESSER numeric_expression','boolean_expression',3,'p_triple_tokens','parser.py',19),
  ('boolean_expression -> storage_expression GREATER numeric_expression','boolean_expression',3,'p_triple_tokens','parser.py',20),
  ('boolean_expression -> storage_expression LESSER_OR_EQUALS numeric_expression','boolean_expression',3,'p_triple_tokens','parser.py',21),
  ('boolean_expression -> storage_expression GREATER_OR_EQUALS numeric_expression','boolean_expression',3,'p_triple_tokens','parser.py',22),
  ('boolean_expression -> numeric_expression LESSER numeric_term','boolean_expression',3,'p_triple_tokens','parser.py',23),
  ('boolean_expression -> numeric_expression LESSER_OR_EQUALS numeric_term','boolean_expression',3,'p_triple_tokens','parser.py',24),
  ('boolean_expression -> numeric_expression GREATER numeric_term','boolean_expression',3,'p_triple_tokens','parser.py',25),
  ('boolean_expression -> numeric_expression GREATER_OR_EQUALS numeric_term','boolean_expression',3,'p_triple_tokens','parser.py',26),
  ('numeric_expression -> numeric_expression PLUS numeric_term','numeric_expression',3,'p_triple_tokens','parser.py',27),
  ('numeric_expression -> numeric_expression MINUS numeric_term','numeric_expression',3,'p_triple_tokens','parser.py',28),
  ('numeric_term -> numeric_term TIMES numeric_factor','numeric_term',3,'p_triple_tokens','parser.py',29),
  ('numeric_term -> numeric_term DIVIDE numeric_factor','numeric_term',3,'p_triple_tokens','parser.py',30),
  ('numeric_factor -> LPAREN numeric_expression RPAREN','numeric_factor',3,'p_triple_tokens','parser.py',31),
  ('boolean_factor -> LPAREN boolean_expression RPAREN','boolean_factor',3,'p_triple_tokens','parser.py',32),
  ('boolean_expression -> boolean_term','boolean_expression',1,'p_unary_tokens','parser.py',38),
  ('boolean_term -> boolean_factor','boolean_term',1,'p_unary_tokens','parser.py',39),
  ('boolean_factor -> BOOL','boolean_factor',1,'p_unary_tokens','parser.py',40),
  ('numeric_expression -> numeric_term','numeric_expression',1,'p_unary_tokens','parser.py',41),
  ('numeric_term -> numeric_factor','numeric_term',1,'p_unary_tokens','parser.py',42),
  ('numeric_factor -> NUMBER','numeric_factor',1,'p_unary_tokens','parser.py',43),
  ('string_expression -> string_term','string_expression',1,'p_unary_tokens','parser.py',44),
  ('string_term -> string_factor','string_term',1,'p_unary_tokens','parser.py',45),
  ('storage_expression -> storage_term','storage_expression',1,'p_unary_tokens','parser.py',46),
  ('approves_expression -> approves_term','approves_expression',1,'p_unary_tokens','parser.py',47),
  ('approves_term -> approves_factor','approves_term',1,'p_unary_tokens','parser.py',48),
  ('approves_factor -> APPROVES','approves_factor',1,'p_unary_tokens','parser.py',49),
  ('string_factor -> QUOTE STRING QUOTE','string_factor',3,'p_string_address_factor','parser.py',56),
  ('string_factor -> DOUBLE_QUOTE STRING DOUBLE_QUOTE','string_factor',3,'p_string_address_factor','parser.py',57),
  ('address_factor -> QUOTE ADDRESS QUOTE','address_factor',3,'p_string_address_factor','parser.py',58),
  ('address_factor -> DOUBLE_QUOTE ADDRESS DOUBLE_QUOTE','address_factor',3,'p_string_address_factor','parser.py',59),
  ('storage_term -> GLOBAL LBRACKET numeric_factor RBRACKET','storage_term',4,'p_global_storage_term','parser.py',65),
  ('storage_term -> GLOBAL LBRACKET string_factor RBRACKET','storage_term',4,'p_global_storage_term','parser.py',66),
  ('storage_term -> LOCAL LBRACKET address_factor RBRACKET LBRACKET RBRACKET','storage_term',6,'p_local_storage_term','parser.py',72),
  ('storage_term -> LOCAL LBRACKET address_factor RBRACKET LBRACKET string_factor RBRACKET','storage_term',7,'p_local_storage_term','parser.py',73),
]
